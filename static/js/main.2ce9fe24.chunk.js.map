{"version":3,"sources":["components/Home.jsx","components/Blog.jsx","components/NewBlogPost.jsx","components/Contact.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["Home","Blog","NewBlogPost","Contact","App","commands","command","callback","redirectPage","setRedirectUrl","transcript","useSpeechRecognition","useState","redirectUrl","SpeechRecognition","browserSupportsSpeechRecognition","redirect","includes","to","home","blog","contact","className","id","path","exact","component","onClick","startListening","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAWeA,EATF,WACZ,OACC,gCACC,uDACA,qDCIYC,EARF,WACZ,OACC,8BACC,2DCKYC,EARK,WACnB,OACC,8BACC,2DCKYC,EARC,WACf,OACC,8BACC,+CCgEYC,EA1DH,WACX,IAAMC,EAAW,CAChB,CACCC,QAAS,CAAC,UAAW,UACrBC,SAAU,SAACC,GAAD,OAAkBC,EAAeD,MAIrCE,EAAeC,+BAAqB,CAAEN,aAAtCK,WAER,EAAsCE,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBJ,EAApB,KAUA,IAAKK,IAAkBC,iCAAkC,OAAO,KAEhE,IAAIC,EAAW,GAUf,OARIH,IAEFG,EAdY,CAAC,OAAQ,OAAQ,gBAAiB,WAarCC,SAASJ,GACP,cAAC,IAAD,CAAUK,GAbV,CACZC,KAAM,IACNC,KAAM,QACN,gBAAiB,YACjBC,QAAS,YASsBR,KAEnB,qDAAwBA,MAKpC,sBAAKS,UAAU,MAAf,UACC,eAAC,IAAD,WACC,sBAAKC,GAAG,OAAR,UACC,cAAC,IAAD,CAAML,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,QAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,YAAT,sBACA,cAAC,IAAD,CAAMA,GAAG,WAAT,wBAGD,cAAC,IAAD,CAAOM,KAAK,IAAIC,OAAK,EAACC,UAAW1B,IACjC,cAAC,IAAD,CAAOwB,KAAK,QAAQC,OAAK,EAACC,UAAWzB,IACrC,cAAC,IAAD,CAAOuB,KAAK,YAAYE,UAAWxB,IACnC,cAAC,IAAD,CAAOsB,KAAK,WAAWE,UAAWvB,IAEjCa,KAEF,uBACA,uBACA,oBAAGO,GAAG,aAAN,wBAA+Bb,KAE/B,wBAAQiB,QAASb,IAAkBc,eAAnC,uBCpDYC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2ce9fe24.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Home = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Welcome to Home Page </h1>\r\n\t\t\t<p>Start Exploring!</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst Blog = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>This is your Blog Page</h1>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Blog;\r\n","import React from \"react\";\r\n\r\nconst NewBlogPost = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Start Adding new Blogs</h1>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NewBlogPost;\r\n","import React from \"react\";\r\n\r\nconst Contact = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Contact Us</h1>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Contact;\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter, Route, Link, Redirect } from \"react-router-dom\";\r\nimport SpeechRecognition, {\r\n\tuseSpeechRecognition,\r\n} from \"react-speech-recognition\";\r\n\r\nimport Home from \"./Home\";\r\nimport Blog from \"./Blog\";\r\nimport NewBlogPost from \"./NewBlogPost\";\r\nimport Contact from \"./Contact\";\r\n\r\nconst App = () => {\r\n\tconst commands = [\r\n\t\t{\r\n\t\t\tcommand: [\"Go to *\", \"Open *\"],\r\n\t\t\tcallback: (redirectPage) => setRedirectUrl(redirectPage),\r\n\t\t},\r\n\t];\r\n\r\n\tconst { transcript } = useSpeechRecognition({ commands });\r\n\r\n\tconst [redirectUrl, setRedirectUrl] = useState(\"\");\r\n\r\n\tconst pages = [\"home\", \"blog\", \"new blog post\", \"contact\"];\r\n\tconst urls = {\r\n\t\thome: \"/\",\r\n\t\tblog: \"/blog\",\r\n\t\t\"new blog post\": \"/blog/new\",\r\n\t\tcontact: \"/contact\",\r\n\t};\r\n\r\n\tif (!SpeechRecognition.browserSupportsSpeechRecognition) return null;\r\n\r\n\tlet redirect = \"\";\r\n\r\n\tif (redirectUrl) {\r\n\t\tif (pages.includes(redirectUrl)) {\r\n\t\t\tredirect = <Redirect to={urls[redirectUrl]} />;\r\n\t\t} else {\r\n\t\t\tredirect = <p>Could not find page:{redirectUrl}</p>;\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<BrowserRouter>\r\n\t\t\t\t<div id=\"link\">\r\n\t\t\t\t\t<Link to=\"/\">Home</Link>\r\n\t\t\t\t\t<Link to=\"/blog\">Blog</Link>\r\n\t\t\t\t\t<Link to=\"blog/new/\">Add Blog</Link>\r\n\t\t\t\t\t<Link to=\"/contact\">Contact</Link>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Route path=\"/\" exact component={Home} />\r\n\t\t\t\t<Route path=\"/blog\" exact component={Blog} />\r\n\t\t\t\t<Route path=\"/blog/new\" component={NewBlogPost} />\r\n\t\t\t\t<Route path=\"/contact\" component={Contact} />\r\n\r\n\t\t\t\t{redirect}\r\n\t\t\t</BrowserRouter>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t\t<p id=\"transcript\">Transcript:{transcript}</p>\r\n\r\n\t\t\t<button onClick={SpeechRecognition.startListening}>Speak</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}